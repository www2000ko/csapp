                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Linked List of 3 elements
                            | 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333 
                            | 
0x048: 30f71800000000000000 | main:	irmovq src,%rdi
0x052: 30f63000000000000000 |     irmovq dest,%rsi
0x05c: 30f10300000000000000 |     irmovq 3,%rcx
0x066: 807000000000000000   | 	call copy		# copy(src,dest,len)
0x06f: 90                   | 	ret
                            | 
                            | # long copy_block(long *src, long *dest, long len)
                            | # src in %rdi,dest in %rsi,len in %rcx
0x070:                      | copy:
0x070: 6300                 |     xorq %rax,%rax
0x072: 30f80800000000000000 |     irmovq 8,%r8        #Const 8
0x07c: 30f90100000000000000 |     irmovq 1,%r9        #Const 1
0x086: 70ab00000000000000   |     jmp test
0x08f: 50a70000000000000000 | loop:	mrmovq (%rdi),%r10      # Get *src
0x099: 6087                 |     addq %r8,%rdi           #src++;
0x09b: 40a60000000000000000 |     rmmovq %r10,(%rsi)          #Set *dest;
0x0a5: 6086                 |     addq %r8,%rsi
0x0a7: 6191                 |     subq %r9,%rcx
0x0a9: 60a0                 |     addq %r10,%rax
0x0ab:                      | test:
0x0ab: 6211                 |     andq %rcx,%rcx      #len > 0
0x0ad: 768f00000000000000   |     jg loop
0x0b6: 90                   |     ret                  # Return
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
