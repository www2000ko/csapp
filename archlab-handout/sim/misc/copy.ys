# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

# Linked List of 3 elements

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333 

main:	irmovq src,%rdi
    irmovq dest,%rsi
    irmovq 3,%rcx
	call copy		# copy(src,dest,len)
	ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi,dest in %rsi,len in %rcx
copy:
    xorq %rax,%rax
    irmovq 8,%r8        #Const 8
    irmovq 1,%r9        #Const 1
    jmp test
loop:	mrmovq (%rdi),%r10      # Get *src
    addq %r8,%rdi           #src++;
    rmmovq %r10,(%rsi)          #Set *dest;
    addq %r8,%rsi
    subq %r9,%rcx
    addq %r10,%rax
test:
    andq %rcx,%rcx      #len > 0
    jg loop
    ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
